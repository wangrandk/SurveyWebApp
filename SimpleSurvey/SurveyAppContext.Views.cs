//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(SimpleSurvey.SurveyAppConString),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets182b16918650c267bd0ccf9cf0099b087b9fdb9e8968483f56b76a8771182289))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets182b16918650c267bd0ccf9cf0099b087b9fdb9e8968483f56b76a8771182289 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "182b16918650c267bd0ccf9cf0099b087b9fdb9e8968483f56b76a8771182289"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "SurveyAppModelStoreContainer.Questions")
            {
                return GetView0();
            }

            if (extentName == "SurveyAppModelStoreContainer.Roles")
            {
                return GetView1();
            }

            if (extentName == "SurveyAppModelStoreContainer.Surveys")
            {
                return GetView2();
            }

            if (extentName == "SurveyAppModelStoreContainer.Users")
            {
                return GetView3();
            }

            if (extentName == "SurveyAppModelStoreContainer.Survey_Response")
            {
                return GetView4();
            }

            if (extentName == "SurveyAppModelStoreContainer.SurveyQuestions")
            {
                return GetView5();
            }

            if (extentName == "SurveyAppConString.Questions")
            {
                return GetView6();
            }

            if (extentName == "SurveyAppConString.Roles")
            {
                return GetView7();
            }

            if (extentName == "SurveyAppConString.Surveys")
            {
                return GetView8();
            }

            if (extentName == "SurveyAppConString.Users")
            {
                return GetView9();
            }

            if (extentName == "SurveyAppConString.Survey_Response")
            {
                return GetView10();
            }

            if (extentName == "SurveyAppConString.SurveyQuestions")
            {
                return GetView11();
            }

            if (extentName == "SurveyAppModelStoreContainer.sysdiagrams")
            {
                return GetView12();
            }

            if (extentName == "SurveyAppConString.sysdiagrams")
            {
                return GetView13();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.Questions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Questions
        [SurveyAppModel.Store.Questions](T1.Questions_ID, T1.Questions_Text, T1.Questions_QuestionType, T1.Questions_Options)
    FROM (
        SELECT 
            T.ID AS Questions_ID, 
            T.Text AS Questions_Text, 
            T.QuestionType AS Questions_QuestionType, 
            T.Options AS Questions_Options, 
            True AS _from0
        FROM SurveyAppConString.Questions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Roles
        [SurveyAppModel.Store.Roles](T1.Roles_ID, T1.Roles_Name)
    FROM (
        SELECT 
            T.ID AS Roles_ID, 
            T.Name AS Roles_Name, 
            True AS _from0
        FROM SurveyAppConString.Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.Surveys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Surveys
        [SurveyAppModel.Store.Surveys](T1.Surveys_ID, T1.Surveys_Title, T1.Surveys_Description, T1.Surveys_CreatedOn, T1.Surveys_ExpiresOn, T1.Surveys_CreatedBy, T1.Surveys_Publish)
    FROM (
        SELECT 
            T.ID AS Surveys_ID, 
            T.Title AS Surveys_Title, 
            T.Description AS Surveys_Description, 
            T.CreatedOn AS Surveys_CreatedOn, 
            T.ExpiresOn AS Surveys_ExpiresOn, 
            T.CreatedBy AS Surveys_CreatedBy, 
            T.Publish AS Surveys_Publish, 
            True AS _from0
        FROM SurveyAppConString.Surveys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [SurveyAppModel.Store.Users](T1.Users_ID, T1.Users_FirstName, T1.Users_LastName, T1.Users_UserName, T1.Users_Password, T1.Users_Role)
    FROM (
        SELECT 
            T.ID AS Users_ID, 
            T.FirstName AS Users_FirstName, 
            T.LastName AS Users_LastName, 
            T.UserName AS Users_UserName, 
            T.Password AS Users_Password, 
            T.Role AS Users_Role, 
            True AS _from0
        FROM SurveyAppConString.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.Survey_Response.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Survey_Response
        [SurveyAppModel.Store.Survey_Response](T1.[Survey_Response.ID], T1.[Survey_Response.SurveyID], T1.[Survey_Response.QuestionID], T1.[Survey_Response.Response], T1.[Survey_Response.FilledBy])
    FROM (
        SELECT 
            T.ID AS [Survey_Response.ID], 
            T.SurveyID AS [Survey_Response.SurveyID], 
            T.QuestionID AS [Survey_Response.QuestionID], 
            T.Response AS [Survey_Response.Response], 
            T.FilledBy AS [Survey_Response.FilledBy], 
            True AS _from0
        FROM SurveyAppConString.Survey_Response AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.SurveyQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SurveyQuestions
        [SurveyAppModel.Store.SurveyQuestions](T1.SurveyQuestions_ID, T1.SurveyQuestions_SurveyID, T1.SurveyQuestions_QuestionID, T1.SurveyQuestions_OrderID)
    FROM (
        SELECT 
            T.ID AS SurveyQuestions_ID, 
            T.SurveyID AS SurveyQuestions_SurveyID, 
            T.QuestionID AS SurveyQuestions_QuestionID, 
            T.OrderID AS SurveyQuestions_OrderID, 
            True AS _from0
        FROM SurveyAppConString.SurveyQuestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.Questions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Questions
        [SurveyAppModel.Question](T1.Question_ID, T1.Question_Text, T1.Question_QuestionType, T1.Question_Options)
    FROM (
        SELECT 
            T.ID AS Question_ID, 
            T.Text AS Question_Text, 
            T.QuestionType AS Question_QuestionType, 
            T.Options AS Question_Options, 
            True AS _from0
        FROM SurveyAppModelStoreContainer.Questions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Roles
        [SurveyAppModel.Role](T1.Role_ID, T1.Role_Name)
    FROM (
        SELECT 
            T.ID AS Role_ID, 
            T.Name AS Role_Name, 
            True AS _from0
        FROM SurveyAppModelStoreContainer.Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.Surveys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Surveys
        [SurveyAppModel.Survey](T1.Survey_ID, T1.Survey_Title, T1.Survey_Description, T1.Survey_CreatedOn, T1.Survey_ExpiresOn, T1.Survey_CreatedBy, T1.Survey_Publish)
    FROM (
        SELECT 
            T.ID AS Survey_ID, 
            T.Title AS Survey_Title, 
            T.Description AS Survey_Description, 
            T.CreatedOn AS Survey_CreatedOn, 
            T.ExpiresOn AS Survey_ExpiresOn, 
            T.CreatedBy AS Survey_CreatedBy, 
            T.Publish AS Survey_Publish, 
            True AS _from0
        FROM SurveyAppModelStoreContainer.Surveys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [SurveyAppModel.User](T1.User_ID, T1.User_FirstName, T1.User_LastName, T1.User_UserName, T1.User_Password, T1.User_Role)
    FROM (
        SELECT 
            T.ID AS User_ID, 
            T.FirstName AS User_FirstName, 
            T.LastName AS User_LastName, 
            T.UserName AS User_UserName, 
            T.Password AS User_Password, 
            T.Role AS User_Role, 
            True AS _from0
        FROM SurveyAppModelStoreContainer.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.Survey_Response.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Survey_Response
        [SurveyAppModel.Survey_Response](T1.[Survey_Response.ID], T1.[Survey_Response.SurveyID], T1.[Survey_Response.QuestionID], T1.[Survey_Response.Response], T1.[Survey_Response.FilledBy])
    FROM (
        SELECT 
            T.ID AS [Survey_Response.ID], 
            T.SurveyID AS [Survey_Response.SurveyID], 
            T.QuestionID AS [Survey_Response.QuestionID], 
            T.Response AS [Survey_Response.Response], 
            T.FilledBy AS [Survey_Response.FilledBy], 
            True AS _from0
        FROM SurveyAppModelStoreContainer.Survey_Response AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.SurveyQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SurveyQuestions
        [SurveyAppModel.SurveyQuestion](T1.SurveyQuestion_ID, T1.SurveyQuestion_SurveyID, T1.SurveyQuestion_QuestionID, T1.SurveyQuestion_OrderID)
    FROM (
        SELECT 
            T.ID AS SurveyQuestion_ID, 
            T.SurveyID AS SurveyQuestion_SurveyID, 
            T.QuestionID AS SurveyQuestion_QuestionID, 
            T.OrderID AS SurveyQuestion_OrderID, 
            True AS _from0
        FROM SurveyAppModelStoreContainer.SurveyQuestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppModelStoreContainer.sysdiagrams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing sysdiagrams
        [SurveyAppModel.Store.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM SurveyAppConString.sysdiagrams AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SurveyAppConString.sysdiagrams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing sysdiagrams
        [SurveyAppModel.sysdiagram](T1.sysdiagram_name, T1.[sysdiagram.principal_id], T1.[sysdiagram.diagram_id], T1.sysdiagram_version, T1.sysdiagram_definition)
    FROM (
        SELECT 
            T.name AS sysdiagram_name, 
            T.principal_id AS [sysdiagram.principal_id], 
            T.diagram_id AS [sysdiagram.diagram_id], 
            T.version AS sysdiagram_version, 
            T.definition AS sysdiagram_definition, 
            True AS _from0
        FROM SurveyAppModelStoreContainer.sysdiagrams AS T
    ) AS T1");
        }
    }
}
